exports.deploy = function deploy_to_sqlite (_model, _db, options) {
    const cds = require('../../lib/cds')
    const {to:_dbrl} = options
    const conf = cds.env.requires.db || {}
    const fts = cds.env.features.folders
    const model = _model || conf.model || cds.resolve(!fts ? '*' : ['*',fts], false)
    const file = _database4 (_db, _dbrl, conf)

    // current 'sqlite' default is bad, as we want to default to 'plain', so ignore it
    const env_dialect = cds.env.sql.dialect !== 'sqlite' ? cds.env.sql.dialect : 'plain'
    const to_dialect = _dbrl && _dbrl.match(/^(\w+)/) && RegExp.$1
    if (to_dialect)  options.dialect = (to_dialect === 'sql')
        ? conf.dialect || env_dialect
        : to_dialect
    if (options.dialect === 'postgres' && !options.dry)  console.error('\nDeploying to PostgreSQL is not yet supported\n')

    return cds.deploy(model) .to ('sqlite:'+file, options)
    .then (db => db && db.disconnect()) // REVISIT: we should NOT require to disconnect explicitly
}

function _database4 (_db,_dbrl,conf) {
    if (_db)  return _db
    if (conf.credentials?.database) return conf.credentials.database
    if (conf.credentials?.url) return conf.credentials.url
    if (_dbrl === 'sqlite')  return 'db.sqlite'
    if (_dbrl === 'sql')  return ':memory:'
}
