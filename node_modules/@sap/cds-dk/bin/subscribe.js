module.exports = Object.assign(subscribe, {
  options: ['--to', '--user'],
  flags: [],
  shortcuts: ['-2', '-u'],
  help: `
# SYNOPSIS

  *cds subscribe* <tenant>

  Subscribe a tenant to a multi-tenant SaaS app.

  *cds subscribe* only supports Basic Authentication and is intended for non-productive use,
  including SaaS apps running on localhost with mock authentication.

# OPTIONS

  *-2* | *--to* <url>

    Specify the URL of the extensible SaaS app. Required setting.

  *-u* | *--user* <name>[:<password>]

    Username and optionally password for authentication. Required setting.
    See https://cap.cloud.sap/docs/guides/multitenancy/#send-subscribe-events for information on suitable mock users.

    If password is omitted, it is assumed empty.
    Note: productive passwords should not be specified on the command line.

`})



async function subscribe([tenant], { to: url, user } = {}) {

  const cds = require('../lib/cds')

  // check for application environment
  // fails for edge cases (ignored for now):
  // @sap/cds-mtx application with missing modules (no npm install)
  // dev scenario with both @sap/cds-mtx and @sap/cds-mtxs installed
  function _hasMtEnv() {
    return cds.requires.multitenancy && !cds.mtx
  }


  if (!tenant) {
    console.error('Must provide a tenant')
    return this.help('subscribe')
  }
  if (!url) {
    // check whether we are in a mt(xs) environment
    if (!_hasMtEnv()) throw new Error('Local cds subscribe operation can only be run inside a multitenant application environment using @sap/cds-mtxs. Please specify application url (--to <url>) if you want to subscribe from remote')
    console.log ('\nSubscribing', {tenant})
    const { 'cds.xt.DeploymentService':ds } = await cds.serve ([
      '@sap/cds-mtxs/srv/deployment-service',
      '@sap/cds-mtxs/srv/model-provider'
    ])
    cds.emit('served')
    // await cds.connect.to('db')
    await ds.subscribe(tenant)
  } else {
    // Connecting to a deployment service in a subscribed application
    if (typeof user !== 'string')  throw new Error('Must provide a username')
    const [username, password = ''] = user.split(':');
    console.log ('\nSubscribing', {tenant}, 'to', {url})
    await require('axios').post (url+'/-/cds/deployment/subscribe', {
      tenant
    }, {
      auth: { username, password }
    });
  }
  console.log('Subscription succeeded.\n')
}

// cds subscribe t1 --to http://localhost:4004 -u yves
