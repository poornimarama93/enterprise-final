const cds = require('../../../cds')
const { copy, path } = cds.utils
const ProjectReader = require('../../util/projectReader')
const { mergeJSON } = require('../../util/merge')

module.exports = class ExtensibilityTemplate extends require('../templateBase') {
  constructor(projectPath, generator) {
    super(projectPath, generator, __dirname)
    this.projectReader = new ProjectReader(projectPath)
  }

  static hasFacet(env) {
    return !!env.requires?.extensibility
  }

  async run() {
    const projectDescriptor = await this.projectReader.read(this.options)
    const { for: forProfile, isJava } = projectDescriptor.cap
    const cdsConfigPath = path.join(this.projectPath, isJava ? '.cdsrc.json' : 'package.json')
    const cdsTemplateFile = forProfile ? (isJava ? 'cdsrc.json.hbs' : 'cds.package.json.hbs') : (isJava ? 'cdsrc.json' : 'cds.package.json')
    await mergeJSON(cdsConfigPath, path.join(__dirname, 'files', cdsTemplateFile), projectDescriptor)
    await this.runDependentMerging()
  }

  async runDependentMerging() {
    const projectDescriptor = await this.projectReader.read()
    const { hasXsuaa, hasHelm } = projectDescriptor.cap
    if (hasXsuaa) {
      await mergeJSON(
        path.join(this.projectPath, 'xs-security.json'),
        path.join(__dirname, 'files', 'xs-security.json.hbs'),
        projectDescriptor,
        {
          additions: [{
            ref: 'scope-extension-developer',
            in: 'scopes',
            where: [{ property: 'name', isEqualTo: '$XSAPPNAME.cds.ExtensionDeveloper' }],
          }, {
            ref: 'scope-uiflex',
            in: 'scopes',
            where: [{ property: 'name', isEqualTo: '$XSAPPNAME.cds.UIFlexDeveloper' }],
          }, {
            ref: 'template-extension-developer',
            in: 'role-templates',
            where: [{ property: 'name', isEqualTo: 'ExtensionDeveloper' }],
          }]
        }
      )
    }
    if (hasXsuaa && hasHelm) {
      // REVISIT: Shared xs-security.json location for Helm and MTA?
      await copy(
        path.join(this.projectPath, 'xs-security.json'),
        path.join(this.projectPath, 'chart', 'xs-security.json')
      )
    }
  }
}
