const cds = require('../../../cds'), { path } = cds.utils
const ProjectReader = require('../../util/projectReader')
const { mergeJSON, sortDependencies } = require('../../util/merge')

module.exports = class TogglesTemplate extends require('../templateBase') {
  constructor(projectPath, generator) {
    super(projectPath, generator, __dirname)
    this.projectReader = new ProjectReader(projectPath)
  }

  static hasFacet(env) {
    return !!env.requires?.toggles
  }

  async run() {
    const projectDescriptor = await this.projectReader.read(this.options)
    const { for: forProfile, isNodejs, isJava } = projectDescriptor.cap
    if (isNodejs) {
      const packageJSONPath = path.join(this.projectPath, 'package.json')
      const cdsTemplateFile = forProfile ? 'cds.package.json.hbs' : 'cds.package.json'
      await mergeJSON(packageJSONPath, path.join(__dirname, 'files', cdsTemplateFile), projectDescriptor)
      await sortDependencies(packageJSONPath)
    } else if (isJava) {
      const cdsrcPath = path.join(this.projectPath, '.cdsrc.json')
      const cdsTemplateFile = path.join(__dirname, 'files', forProfile ? 'cdsrc.json.hbs' : 'cdsrc.json')
      await mergeJSON(cdsrcPath, cdsTemplateFile, projectDescriptor)
    }
    await this.runDependentMerging()
  }
}
